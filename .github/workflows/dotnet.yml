# This workflow will build a .NET project

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-test: # Job principal para construir y probar .NET
    runs-on: ubuntu-latest
    permissions:
      contents: write # Esto le da permiso al GITHUB_TOKEN para escribir en el repositorio
    
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal

    - name: Deploy to GitHub Pages
      # You may pin to the exact commit or the version.
      # uses: JamesIves/github-pages-deploy-action@5dc1d5a192aeb5ab5b7d5a77b7d36aea4a7f5c92
      uses: JamesIves/github-pages-deploy-action@4.1.4
      with:
        branch: Release # <--- Asegúrate que esto coincida con la rama de despliegue de tu GitHub Pages
        folder: docs    # <--- Asegúrate que esta carpeta contenga tu contenido estático para Pages

  # =========================================================================
  # Jobs de notificación de Discord (Integrados de ci_discord.yml)
  # =========================================================================

  notify-discord-success:
    runs-on: ubuntu-latest
    # Este job solo se ejecuta si el job 'build-and-test' tuvo éxito
    if: ${{ success() }}
    needs: [build-and-test] # Depende del job 'build-and-test'
    steps:
      - name: Notificar éxito a Discord
        env:
          # Asegúrate de haber configurado tu Discord Webhook como un secreto en GitHub
          # Ve a Settings -> Secrets and variables -> Actions -> New repository secret
          # Nombre del secreto: DISCORD_FEEDBACK
          DISCORD_FEEDBACK: ${{ secrets.DISCORD_FEEDBACK }}
        run: |
          curl -H "Content-Type: application/json" \
            -X POST \
            -d '{"content":"✅ *CI/CD EXITOSO* en `${{ github.repository }}` para el commit `${{ github.sha }}` por `${{ github.actor }}`. Desplegado en GitHub Pages."}' \
            $DISCORD_FEEDBACK

  notify-discord-failure:
    runs-on: ubuntu-latest
    # Este job solo se ejecuta si el job 'build-and-test' falló
    if: ${{ failure() }}
    needs: [build-and-test] # Depende del job 'build-and-test'
    steps:
      - name: Notificar error a Discord
        env:
          DISCORD_FEEDBACK: ${{ secrets.DISCORD_FEEDBACK }}
        run: |
          curl -H "Content-Type: application/json" \
            -X POST \
            -d '{"content":"❌ *CI/CD FALLÓ* en `${{ github.repository }}` para el commit `${{ github.sha }}` por `${{ github.actor }}`. Revisa los logs en: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" }' \
            $DISCORD_FEEDBACK
